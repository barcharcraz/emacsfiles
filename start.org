#+property: header-args :tangle yes :results silent
* Header
** configuration
*** encodings
#+begin_src emacs-lisp
  (prefer-coding-system 'utf-8)
#+end_src
*** custom file
#+begin_src emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(when (file-exists-p custom-file)
  (load custom-file))
#+end_src
*** package.el
    :properties:
    :header-args: :tangle yes
    :end:
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
               '("melpa" . "https://melpa.org/packages/") t)
  (add-to-list 'package-archives
               '("org" . "https://orgmode.org/elpa/") t)
#+end_src
 
*** use-package
**** package.el mode
     :properties:
     :header-args: :tangle yes
     :end:
#+begin_src emacs-lisp
(unless package-archive-contents
  (package-refresh-contents))

(unless (package-installed-p 'use-package)
  (package-install 'use-package))

(setq use-package-always-ensure t)
#+end_src
* customizations
** variable pitch fonts
   I really like variable pitched fonts (it's why I use emacs, so we're going
   to set them up to be the default here. Note that I want to use them for
   as much as possible, including code
   #+begin_src emacs-lisp :tangle yes
     (custom-set-faces
      '(default ((t (:family "Noto Sans" :inherit variable-pitch)))))
     (custom-set-faces
      '(varible-pitch ((t (:family "Noto Sans")))))
   #+end_src
** unicode fonts
Emacs maps many unicode blocks by default, but not all of them,
we can use ~set-fontset-font~ to add fonts to the mapping.
** company fixed pitch font
while I love variable pitched fonts company has trouble with them (the
completions don't line up). Thus we are going to disable them in the
company completion window.
#+begin_src emacs-lisp
  (custom-set-faces
   '(company-tooltip ((t (:inherit fixed-pitch))))) 
#+end_src
** lowercase templates
org's templates are allcaps by default and I think this looks bad
#+begin_src emacs-lisp  
  (custom-set-variables
   '(org-structure-template-alist
       (quote
        (("s" "#+begin_src ?

  ,#+end_src")
      ("e" "#+begin_example
  ?
  ,#+end_example")
      ("q" "#+begin_quote
  ?
  ,#+end_quote")
      ("v" "#+begin_verse
  ?
  ,#+end_verse")
      ("v" "#+begin_verbatim
  ?
  ,#+end_verbatim")
      ("c" "#+begin_center
  ?
  ,#+end_center")
      ("c" "#+begin_comment
  ?
  ,#+end_comment")
      ("l" "#+begin_export latex
  ?
  ,#+end_export")
      ("l" "#+latex: ")
      ("h" "#+begin_export html
  ?
  ,#+end_export")
      ("h" "#+html: ")
      ("a" "#+begin_export ascii
  ?
  ,#+end_export")
      ("a" "#+ascii: ")
      ("i" "#+index: ?")
      ("i" "#+include: %file ?")))))
#+end_src
